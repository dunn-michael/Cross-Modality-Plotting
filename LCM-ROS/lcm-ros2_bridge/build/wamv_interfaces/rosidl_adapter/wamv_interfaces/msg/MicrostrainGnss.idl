// generated from rosidl_adapter/resource/msg.idl.em
// with input from wamv_interfaces/msg/MicrostrainGnss.msg
// generated code does not contain a copyright notice


module wamv_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "header header                      # Header for ROS message")
    struct MicrostrainGnss {
      @verbatim (language="comment", text=
        "Timestamp")
      int64 timestamp;

      @verbatim (language="comment", text=
        "Latitude")
      double latitude;

      @verbatim (language="comment", text=
        "Longitude")
      double longitude;

      @verbatim (language="comment", text=
        "Height Above Elipsoid")
      double height_above_elipsoid;

      @verbatim (language="comment", text=
        "Height Above Mean Sea Level")
      double height_above_msl;

      @verbatim (language="comment", text=
        "Horizontal Accuracy")
      float horizontal_accuracy;

      @verbatim (language="comment", text=
        "Vertical Accuracy")
      float vertical_accuracy;

      @verbatim (language="comment", text=
        "ECEF Position X")
      double ecef_pos_x;

      @verbatim (language="comment", text=
        "ECEF Position Y")
      double ecef_pos_y;

      @verbatim (language="comment", text=
        "ECEF Position Z")
      double ecef_pos_z;

      @verbatim (language="comment", text=
        "ECEF Position Accuracy")
      float ecef_pos_accuracy;

      @verbatim (language="comment", text=
        "North Velocity")
      float north_velocity;

      @verbatim (language="comment", text=
        "East Velocity")
      float east_velocity;

      @verbatim (language="comment", text=
        "Down Velocity")
      float down_velocity;

      @verbatim (language="comment", text=
        "Speed")
      float speed;

      @verbatim (language="comment", text=
        "Ground Speed")
      float ground_speed;

      @verbatim (language="comment", text=
        "Heading")
      float heading;

      @verbatim (language="comment", text=
        "Speed Accuracy")
      float speed_accuracy;

      @verbatim (language="comment", text=
        "Heading Accuracy")
      float heading_accuracy;

      @verbatim (language="comment", text=
        "ECEF Velocity X")
      float ecef_vel_x;

      @verbatim (language="comment", text=
        "ECEF Velocity Y")
      float ecef_vel_y;

      @verbatim (language="comment", text=
        "ECEF Velocity Z")
      float ecef_vel_z;

      @verbatim (language="comment", text=
        "ECEF Velocity Accuracy")
      float ecef_vel_accuracy;

      @verbatim (language="comment", text=
        "Geometric DOP")
      float geometric_dop;

      @verbatim (language="comment", text=
        "Position DOP")
      float position_dop;

      @verbatim (language="comment", text=
        "Horizontal DOP")
      float horizontal_dop;

      @verbatim (language="comment", text=
        "Vertical DOP")
      float vertical_dop;

      @verbatim (language="comment", text=
        "Time DOP")
      float time_dop;

      @verbatim (language="comment", text=
        "Northing DOP")
      float northing_dop;

      @verbatim (language="comment", text=
        "Easting DOP")
      float easting_dop;

      @verbatim (language="comment", text=
        "UTC Timestamp")
      int64 utc_timestamp;

      @verbatim (language="comment", text=
        "UTC Timestamp Flags")
      int32 utc_timestamp_flags;

      @verbatim (language="comment", text=
        "GPS Time of Week")
      double gps_time_tow;

      @verbatim (language="comment", text=
        "GPS Time Week Number")
      int32 gps_time_week_num;

      @verbatim (language="comment", text=
        "GPS Clock Bias")
      double gps_clock_bias;

      @verbatim (language="comment", text=
        "GPS Clock Drift")
      double gps_clock_drift;

      @verbatim (language="comment", text=
        "GPS Clock Accuracy")
      double gps_clock_accuracy;

      @verbatim (language="comment", text=
        "GNSS Fix Type")
      int16 gnss_fix_type;

      @verbatim (language="comment", text=
        "GNSS Fix Satellite Count")
      int16 gnss_fix_sv_count;

      @verbatim (language="comment", text=
        "GNSS Fix Flags")
      int32 gnss_fix_flags;

      @verbatim (language="comment", text=
        "Sensor State")
      int16 sensor_state;

      @verbatim (language="comment", text=
        "Antenna State")
      int16 antenna_state;

      @verbatim (language="comment", text=
        "Antenna Power")
      int16 antenna_power;

      @verbatim (language="comment", text=
        "DGNSS Newest Age GNSS Base 0")
      float dgnss_newest_age_gnss_base_0;

      @verbatim (language="comment", text=
        "DGNSS Base Station Status GNSS Base 0")
      int16 dgnss_base_station_status_gnss_base_0;

      @verbatim (language="comment", text=
        "DGNSS Number of Channels GNSS Base 0")
      int32 dgnss_num_channels_gnss_base_0;
    };
  };
};
