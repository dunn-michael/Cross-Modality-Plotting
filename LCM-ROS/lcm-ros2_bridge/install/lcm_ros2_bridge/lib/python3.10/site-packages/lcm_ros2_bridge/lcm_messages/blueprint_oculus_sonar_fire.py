"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class blueprint_oculus_sonar_fire(object):
    __slots__ = ["timestamp", "mode", "gamma", "flags", "ping_rate", "range", "gain", "speed_of_sound", "salinity"]

    __typenames__ = ["int64_t", "int16_t", "int16_t", "int16_t", "int16_t", "float", "float", "float", "float"]

    __dimensions__ = [None, None, None, None, None, None, None, None, None]

    def __init__(self):
        self.timestamp = 0
        self.mode = 0
        self.gamma = 0
        self.flags = 0
        self.ping_rate = 0
        self.range = 0.0
        self.gain = 0.0
        self.speed_of_sound = 0.0
        self.salinity = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(blueprint_oculus_sonar_fire._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qhhhhffff", self.timestamp, self.mode, self.gamma, self.flags, self.ping_rate, self.range, self.gain, self.speed_of_sound, self.salinity))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != blueprint_oculus_sonar_fire._get_packed_fingerprint():
            raise ValueError("Decode error")
        return blueprint_oculus_sonar_fire._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = blueprint_oculus_sonar_fire()
        self.timestamp, self.mode, self.gamma, self.flags, self.ping_rate, self.range, self.gain, self.speed_of_sound, self.salinity = struct.unpack(">qhhhhffff", buf.read(32))
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if blueprint_oculus_sonar_fire in parents: return 0
        tmphash = (0x94bd32bb8388b314) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if blueprint_oculus_sonar_fire._packed_fingerprint is None:
            blueprint_oculus_sonar_fire._packed_fingerprint = struct.pack(">Q", blueprint_oculus_sonar_fire._get_hash_recursive([]))
        return blueprint_oculus_sonar_fire._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", blueprint_oculus_sonar_fire._get_packed_fingerprint())[0]

