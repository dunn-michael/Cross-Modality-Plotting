"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class microstrain_est(object):
    __slots__ = ["timestamp", "estLatitude", "estLongitude", "estHeightAboveElipsoid", "estNorthVelocity", "estEastVelocity", "estDownVelocity", "estOrientQuaternion", "estOrientMatrix", "estRoll", "estPitch", "estYaw", "estGyroBiasX", "estGyroBiasY", "estGyroBiasZ", "estAccelBiasX", "estAccelBiasY", "estAccelBiasZ", "estNorthPositionUncert", "estEastPositionUncert", "estDownPositionUncert", "estNorthVelocityUncert", "estEastVelocityUncert", "estDownVelocityUncert", "estRollUncert", "estPitchUncert", "estYawUncert", "estGyroBiasXUncert", "estGyroBiasYUncert", "estGyroBiasZUncert", "estAccelBiasXUncert", "estAccelBiasYUncert", "estAccelBiasZUncert", "estLinearAccelX", "estLinearAccelY", "estLinearAccelZ", "estAngularRateX", "estAngularRateY", "estAngularRateZ", "estWGS84LocalGravMagnitude", "estFilterState", "estFilterDynamicsMode", "estFilterStatusFlags", "estFilterGpsTimeTow", "estFilterGpsTimeWeekNum", "estAttitudeUncertQuaternion", "estGravityVectorX", "estGravityVectorY", "estGravityVectorZ", "estHeading", "estHeadingUncert", "estHeadingSource", "estMagneticModelSlnNorth", "estMagneticModelSlnEast", "estMagneticModelSlnDown", "estMagneticModelSlnInclination", "estMagneticModelSlnDeclination", "estGyroScaleFactorX", "estGyroScaleFactorY", "estGyroScaleFactorZ", "estAccelScaleFactorX", "estAccelScaleFactorY", "estAccelScaleFactorZ", "estGyroScaleFactorXUncert", "estGyroScaleFactorYUncert", "estGyroScaleFactorZUncert", "estAccelScaleFactorXUncert", "estAccelScaleFactorYUncert", "estAccelScaleFactorZUncert", "estCompensatedAccelX", "estCompensatedAccelY", "estCompensatedAccelZ", "estStdAtmModelGeometricAlt", "estStdAtmModelGeopotentialAlt", "estStdAtmModelTemperature", "estStdAtmModelPressure", "estStdAtmModelDensity", "estPressureAlt", "estMagAutoHardIronOffsetX", "estMagAutoHardIronOffsetY", "estMagAutoHardIronOffsetZ", "estMagAutoSoftIronMatrix"]

    __typenames__ = ["int64_t", "double", "double", "double", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "int32_t", "int32_t", "int32_t", "double", "int32_t", "float", "float", "float", "float", "float", "float", "int32_t", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float"]

    __dimensions__ = [None, None, None, None, None, None, None, [3], [3, 3], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [3], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, [3, 3]]

    def __init__(self):
        self.timestamp = 0
        self.estLatitude = 0.0
        self.estLongitude = 0.0
        self.estHeightAboveElipsoid = 0.0
        self.estNorthVelocity = 0.0
        self.estEastVelocity = 0.0
        self.estDownVelocity = 0.0
        self.estOrientQuaternion = [ 0.0 for dim0 in range(3) ]
        self.estOrientMatrix = [ [ 0.0 for dim1 in range(3) ] for dim0 in range(3) ]
        self.estRoll = 0.0
        self.estPitch = 0.0
        self.estYaw = 0.0
        self.estGyroBiasX = 0.0
        self.estGyroBiasY = 0.0
        self.estGyroBiasZ = 0.0
        self.estAccelBiasX = 0.0
        self.estAccelBiasY = 0.0
        self.estAccelBiasZ = 0.0
        self.estNorthPositionUncert = 0.0
        self.estEastPositionUncert = 0.0
        self.estDownPositionUncert = 0.0
        self.estNorthVelocityUncert = 0.0
        self.estEastVelocityUncert = 0.0
        self.estDownVelocityUncert = 0.0
        self.estRollUncert = 0.0
        self.estPitchUncert = 0.0
        self.estYawUncert = 0.0
        self.estGyroBiasXUncert = 0.0
        self.estGyroBiasYUncert = 0.0
        self.estGyroBiasZUncert = 0.0
        self.estAccelBiasXUncert = 0.0
        self.estAccelBiasYUncert = 0.0
        self.estAccelBiasZUncert = 0.0
        self.estLinearAccelX = 0.0
        self.estLinearAccelY = 0.0
        self.estLinearAccelZ = 0.0
        self.estAngularRateX = 0.0
        self.estAngularRateY = 0.0
        self.estAngularRateZ = 0.0
        self.estWGS84LocalGravMagnitude = 0.0
        self.estFilterState = 0
        self.estFilterDynamicsMode = 0
        self.estFilterStatusFlags = 0
        self.estFilterGpsTimeTow = 0.0
        self.estFilterGpsTimeWeekNum = 0
        self.estAttitudeUncertQuaternion = [ 0.0 for dim0 in range(3) ]
        self.estGravityVectorX = 0.0
        self.estGravityVectorY = 0.0
        self.estGravityVectorZ = 0.0
        self.estHeading = 0.0
        self.estHeadingUncert = 0.0
        self.estHeadingSource = 0
        self.estMagneticModelSlnNorth = 0.0
        self.estMagneticModelSlnEast = 0.0
        self.estMagneticModelSlnDown = 0.0
        self.estMagneticModelSlnInclination = 0.0
        self.estMagneticModelSlnDeclination = 0.0
        self.estGyroScaleFactorX = 0.0
        self.estGyroScaleFactorY = 0.0
        self.estGyroScaleFactorZ = 0.0
        self.estAccelScaleFactorX = 0.0
        self.estAccelScaleFactorY = 0.0
        self.estAccelScaleFactorZ = 0.0
        self.estGyroScaleFactorXUncert = 0.0
        self.estGyroScaleFactorYUncert = 0.0
        self.estGyroScaleFactorZUncert = 0.0
        self.estAccelScaleFactorXUncert = 0.0
        self.estAccelScaleFactorYUncert = 0.0
        self.estAccelScaleFactorZUncert = 0.0
        self.estCompensatedAccelX = 0.0
        self.estCompensatedAccelY = 0.0
        self.estCompensatedAccelZ = 0.0
        self.estStdAtmModelGeometricAlt = 0.0
        self.estStdAtmModelGeopotentialAlt = 0.0
        self.estStdAtmModelTemperature = 0.0
        self.estStdAtmModelPressure = 0.0
        self.estStdAtmModelDensity = 0.0
        self.estPressureAlt = 0.0
        self.estMagAutoHardIronOffsetX = 0.0
        self.estMagAutoHardIronOffsetY = 0.0
        self.estMagAutoHardIronOffsetZ = 0.0
        self.estMagAutoSoftIronMatrix = [ [ 0.0 for dim1 in range(3) ] for dim0 in range(3) ]

    def encode(self):
        buf = BytesIO()
        buf.write(microstrain_est._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qdddfff", self.timestamp, self.estLatitude, self.estLongitude, self.estHeightAboveElipsoid, self.estNorthVelocity, self.estEastVelocity, self.estDownVelocity))
        buf.write(struct.pack('>3f', *self.estOrientQuaternion[:3]))
        for i0 in range(3):
            buf.write(struct.pack('>3f', *self.estOrientMatrix[i0][:3]))
        buf.write(struct.pack(">fffffffffffffffffffffffffffffffiiidi", self.estRoll, self.estPitch, self.estYaw, self.estGyroBiasX, self.estGyroBiasY, self.estGyroBiasZ, self.estAccelBiasX, self.estAccelBiasY, self.estAccelBiasZ, self.estNorthPositionUncert, self.estEastPositionUncert, self.estDownPositionUncert, self.estNorthVelocityUncert, self.estEastVelocityUncert, self.estDownVelocityUncert, self.estRollUncert, self.estPitchUncert, self.estYawUncert, self.estGyroBiasXUncert, self.estGyroBiasYUncert, self.estGyroBiasZUncert, self.estAccelBiasXUncert, self.estAccelBiasYUncert, self.estAccelBiasZUncert, self.estLinearAccelX, self.estLinearAccelY, self.estLinearAccelZ, self.estAngularRateX, self.estAngularRateY, self.estAngularRateZ, self.estWGS84LocalGravMagnitude, self.estFilterState, self.estFilterDynamicsMode, self.estFilterStatusFlags, self.estFilterGpsTimeTow, self.estFilterGpsTimeWeekNum))
        buf.write(struct.pack('>3f', *self.estAttitudeUncertQuaternion[:3]))
        buf.write(struct.pack(">fffffifffffffffffffffffffffffffffff", self.estGravityVectorX, self.estGravityVectorY, self.estGravityVectorZ, self.estHeading, self.estHeadingUncert, self.estHeadingSource, self.estMagneticModelSlnNorth, self.estMagneticModelSlnEast, self.estMagneticModelSlnDown, self.estMagneticModelSlnInclination, self.estMagneticModelSlnDeclination, self.estGyroScaleFactorX, self.estGyroScaleFactorY, self.estGyroScaleFactorZ, self.estAccelScaleFactorX, self.estAccelScaleFactorY, self.estAccelScaleFactorZ, self.estGyroScaleFactorXUncert, self.estGyroScaleFactorYUncert, self.estGyroScaleFactorZUncert, self.estAccelScaleFactorXUncert, self.estAccelScaleFactorYUncert, self.estAccelScaleFactorZUncert, self.estCompensatedAccelX, self.estCompensatedAccelY, self.estCompensatedAccelZ, self.estStdAtmModelGeometricAlt, self.estStdAtmModelGeopotentialAlt, self.estStdAtmModelTemperature, self.estStdAtmModelPressure, self.estStdAtmModelDensity, self.estPressureAlt, self.estMagAutoHardIronOffsetX, self.estMagAutoHardIronOffsetY, self.estMagAutoHardIronOffsetZ))
        for i0 in range(3):
            buf.write(struct.pack('>3f', *self.estMagAutoSoftIronMatrix[i0][:3]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != microstrain_est._get_packed_fingerprint():
            raise ValueError("Decode error")
        return microstrain_est._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = microstrain_est()
        self.timestamp, self.estLatitude, self.estLongitude, self.estHeightAboveElipsoid, self.estNorthVelocity, self.estEastVelocity, self.estDownVelocity = struct.unpack(">qdddfff", buf.read(44))
        self.estOrientQuaternion = struct.unpack('>3f', buf.read(12))
        self.estOrientMatrix = []
        for i0 in range(3):
            self.estOrientMatrix.append(struct.unpack('>3f', buf.read(12)))
        self.estRoll, self.estPitch, self.estYaw, self.estGyroBiasX, self.estGyroBiasY, self.estGyroBiasZ, self.estAccelBiasX, self.estAccelBiasY, self.estAccelBiasZ, self.estNorthPositionUncert, self.estEastPositionUncert, self.estDownPositionUncert, self.estNorthVelocityUncert, self.estEastVelocityUncert, self.estDownVelocityUncert, self.estRollUncert, self.estPitchUncert, self.estYawUncert, self.estGyroBiasXUncert, self.estGyroBiasYUncert, self.estGyroBiasZUncert, self.estAccelBiasXUncert, self.estAccelBiasYUncert, self.estAccelBiasZUncert, self.estLinearAccelX, self.estLinearAccelY, self.estLinearAccelZ, self.estAngularRateX, self.estAngularRateY, self.estAngularRateZ, self.estWGS84LocalGravMagnitude, self.estFilterState, self.estFilterDynamicsMode, self.estFilterStatusFlags, self.estFilterGpsTimeTow, self.estFilterGpsTimeWeekNum = struct.unpack(">fffffffffffffffffffffffffffffffiiidi", buf.read(148))
        self.estAttitudeUncertQuaternion = struct.unpack('>3f', buf.read(12))
        self.estGravityVectorX, self.estGravityVectorY, self.estGravityVectorZ, self.estHeading, self.estHeadingUncert, self.estHeadingSource, self.estMagneticModelSlnNorth, self.estMagneticModelSlnEast, self.estMagneticModelSlnDown, self.estMagneticModelSlnInclination, self.estMagneticModelSlnDeclination, self.estGyroScaleFactorX, self.estGyroScaleFactorY, self.estGyroScaleFactorZ, self.estAccelScaleFactorX, self.estAccelScaleFactorY, self.estAccelScaleFactorZ, self.estGyroScaleFactorXUncert, self.estGyroScaleFactorYUncert, self.estGyroScaleFactorZUncert, self.estAccelScaleFactorXUncert, self.estAccelScaleFactorYUncert, self.estAccelScaleFactorZUncert, self.estCompensatedAccelX, self.estCompensatedAccelY, self.estCompensatedAccelZ, self.estStdAtmModelGeometricAlt, self.estStdAtmModelGeopotentialAlt, self.estStdAtmModelTemperature, self.estStdAtmModelPressure, self.estStdAtmModelDensity, self.estPressureAlt, self.estMagAutoHardIronOffsetX, self.estMagAutoHardIronOffsetY, self.estMagAutoHardIronOffsetZ = struct.unpack(">fffffifffffffffffffffffffffffffffff", buf.read(140))
        self.estMagAutoSoftIronMatrix = []
        for i0 in range(3):
            self.estMagAutoSoftIronMatrix.append(struct.unpack('>3f', buf.read(12)))
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if microstrain_est in parents: return 0
        tmphash = (0x2b7f16a94cb9ec9a) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if microstrain_est._packed_fingerprint is None:
            microstrain_est._packed_fingerprint = struct.pack(">Q", microstrain_est._get_hash_recursive([]))
        return microstrain_est._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", microstrain_est._get_packed_fingerprint())[0]

